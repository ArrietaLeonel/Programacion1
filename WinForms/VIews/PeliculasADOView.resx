<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timerStatusBar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAA
        AD4AAAB1AAAAmAAAAKkAAACpAAAAmAAAAHUAAAA+AAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAA
        AJIAAADsAAAA/wAAAP8HBwf/EhIR/xMSEf8IBwf/AAAA/wAAAP8AAADsAAAAkgAAACEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAA
        AIgAAAD4BQUE/y8sKf9pZF//lZCK/6qlnv+yraj/trGs/7Crpf+cl5L/b2tm/zIvLP8FBQT/AAAA+AAA
        AIgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AB4AAADOAwMC/zs4M/+Ignr/opyV/7m0rv/NycX/39zZ/+jm5P/q6ef/5OLf/9XSz//Dv7r/rKeh/5GL
        hP8+Ozf/AwMC/wAAAM4AAAAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAiAAAA4RIRD/9ybGT/oJmS/8nEv//s6eb/7+zq//Du7P/y8O7/9fPy//b19P/39vT/+Pf2//r5
        +f/6+vn/19XS/6umn/93cmv/EhAO/wAAAOEAAAAiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADwAAANgcGhf/hH10/7q0rv/n5OH/6ufk/+vp5v/t6+j/8vDu//z7+//+/v7//v7+//39
        /P/5+Pf/+Pf2//r5+f/8+/v//Pz7/8nGwv+Ignr/GxkW/wAAANgAAAAPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACiFBMR/4eAd//Mx8L/5eHd/+fj4P/o5eL/6ufk/+vo5v/ExMT/lJSU/3x8
        fP98fHz/lJSU/8XFxf/08/L/+Pf2//r5+f/8+/v//f39/+Hf3f+LhX3/FBIQ/wAAAKIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAPQQEA/12b2f/zcjC/+Le2f/j4Nv/5eHd/+fj4P/o5eL/ioeE/1tX
        U/9+eXP/lY6H/5aQif+AenT/XFhU/4+Ni//39vT/+Pf2//r5+f/8+/v//f39/+Xj4f96dG3/BAQD/gAA
        AD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3Qj45/7+6s//f2tX/4NzX/+Le2f/j4Nv/5eHd/+fj
        4P+moZv/kIqD/5iRiv+el5D/npiQ/5mTi/+Ri4T/q6ei//X08v/39vT/+Pf2//r5+f/8+/v//f39/9fU
        0f9EQDv/AAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQcHBv2Zkov/29bR/93Y0//f2tX/4NzX/+Le
        2f/j4Nv/5eHd/7Wwqv+LhX7/kYuE/5WPiP+Vj4j/koyF/4yGgP+9ubT/8/Lw//X08v/39vT/+Pf2//r5
        +f/8+/v//f39/6iknv8HBwb9AAAAHQAAAAAAAAAAAAAAAAAAAAAAAABtNzMv/8zGv//a1M//4NvX/8bD
        wf+HhH//q6ei/9rW0v/j4Nv/3NnU/5KMhf+Jg33/i4Z//4yGf/+KhH3/l5GL/+jl4v/y8O7/6+nn/7e1
        sv+Sj43/1NPT//v6+f/8+/v/7Ovp/zk2Mv8AAABtAAAAAAAAAAAAAAAAAAAAAAAAAL11cGr/1tHL/+Pf
        2//9/Pz/Y2Jg/1pWUv9iXln/dnFt/9DMx//j4Nv/2tbR/66oov+Ykoz/mpWP/7OtqP/i39v/7+zq/9za
        1/95dXD/Y19a/1xYU/9kYmH//v7+//v7+//8+/v/g397/wAAAL0AAAAAAAAAAAAAAAAAAAAMAAAA+Kqj
        nP/W0cv/+/v6/9DPz/9HREH/VVFN/1xYVP9jX1r/hYF8/+Le2f/j4Nv/5eHd/+bj3//o5eH/6ufk/+vp
        5v/t6+j/iYWB/2RgW/9eWlX/VlNP/0hFQv/Qz8///v7+//r6+f/Ewb7/AAAA+AAAAAwAAAAAAAAAAAAA
        ADoFBAT/xsC5/9LNx//+/v7/lpWU/0hFQv9PTEj/VlJO/1xYVP9jX1r/2NPP/+Le2f/j4Nv/4NzX/+Le
        2f/o5eL/6ufk/+Lf3P9kYFv/XVlV/1dTT/9QTUn/SUZD/5aVlP/+/v7/7u3r/+ro5v8FBAT/AAAAOgAA
        AAAAAAAAAAAAWwoKCf/PyMH/vrev/97c2v92dXP/Qj88/0hGQv9PTEj/VVFN/19aVv/Y1M7/4NvX/9vX
        0f/Gwr3/x8O//9/b1v/o5OH/4+Dd/2BcV/9WUk7/UE1J/0pHQ/9DQD3/d3Z0/97c2v/b2NX/9/b1/wsL
        C/8AAABaAAAAAAAAAAAAAABmDg4N/87IwP/Nx7//k4yD/1dUUf87OTb/QT88/0dEQf9NSkb/h4J8/93Y
        0//d2NP/rKij/1xYVP9cWFT/r6yo/+Tg3P/o5eL/jomE/05LR/9IRUL/Q0A9/zw6N/9XVVH/mpSM//Hv
        7v/39vT/ERER/wAAAGYAAAAAAAAAAAAAAGIKCgn/zca+/87IwP+6s6v/YFpT/zw5Nf88OTb/SUZB/3Zw
        af/PycP/29bR/97a1f+cl5L/Uk9L/1NPS/+fm5f/5eHd/+fj4P/c2dX/fHdx/0tHQ/89Ojf/PDk2/2Jd
        Vv/T0Mz/8/Lw//X08v8MDAz/AAAAYgAAAAAAAAAAAAAASwEBAf/AurL/zca+/87IwP/Iwrr/qKGY/56X
        j/+yq6T/087H/9jTzf/a1M//3djT/9fTzv+inJf/pJ+a/9zY0//k4d3/5eHd/+fj4P/l4d7/wb23/6ul
        nv+3sqz/5OLe//Du7P/y8O7/5uXj/wEBAf8AAABLAAAAAAAAAAAAAAAhAAAA/pqVj//LxLz/zca+/87I
        wP/QysL/0svF/9PNxv/Ev7n/sq2o/8jDvv/a1M//3tnU/+Hd2P/i3tr/4t7a/+Le2f/Sz8v/vbq2/9TR
        zf/o5eL/6ufk/+vp5v/t6+j/7+zq//Du7P+5uLb/AAAA/gAAACEAAAAAAAAAAAAAAAAAAADgYl5a/8rC
        uv/LxLz/zca+/87IwP/Hwbr/YV5a/ywrKf8uLCr/MzEv/25rZ//Szcj/29bR/93Y0//X0s7/cW5r/zMx
        L/8vLSv/LSwp/2lmZP/e29j/6ufk/+vp5v/t6+j/7+zq/3V0c/8AAADgAAAAAAAAAAAAAAAAAAAAAAAA
        AIwaGRj/xb61/8rCuv/LxLz/zca+/1VST/8eHRz/IiEf/yUkIv8oJiT/Kigm/2lmY//a1M//29bR/2to
        Zf8qKCb/KCcl/yYkI/8jISD/Hx4c/15cWv/o5eL/6ufk/+vp5v/q5+T/Hx8e/wAAAIwAAAAAAAAAAAAA
        AAAAAAAAAAAAJAAAAPt+enT/yMC4/8rCuv/OyMD/WFhX/xYVFP8ZGBf/HBsa/x8dHP8gHx7/JCMh/8jE
        vv/KxcD/JCMh/yEfHv8fHhz/HRsa/xoZF/8WFRT/WVlY/+fk4P/o5eL/6ufk/5aUkv8AAAD7AAAAJAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAmxUUE/+6s6r/yMC4/721rf/j4uH/VlVV/xAQD/8TEhH/FRQT/xcW
        Ff8ZGBf/v7m0/8C7tv8ZGBf/FxYV/xYVFP8UExL/ERAP/1ZWVf/j4uH/1NDL/+fj4P/Z1tP/GRgY/wAA
        AJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATAAAA5D48Of/FvbT/xLy0/6KblP/09PP/k5OT/xoa
        Gf8MCwv/Dg0M/zo4Nf/Tzcf/1c/J/zs5N/8ODQ3/DAwL/xoaGv+Tk5P/9PTz/6ehmv/e2tX/49/b/0lH
        Rv8AAADkAAAAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9AAAA91JPS//FvbT/qKGX/5SN
        hP+8uLP/v7y4/2JfWv8/PDn/raeg/9PNxv/Vz8n/saym/0JAPf9mY1//wr+8/8C8uP+clY3/ubOt/+Dc
        2P9eXVv/AAAA9wAAAD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPAAAA+EE+
        O/+7tKz/raad/5uTiv+Xj4f/pJ2U/7u0rP/QysL/0svF/9PNx//Vz8n/wry2/66noP+im5P/pqCY/764
        sf/Szsn/SkhH/wAAAPgAAABPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA/AAAA5xgXFv+Hgnz/x7+3/8rCuv/LxLz/zca+/87IwP/QysL/0svF/9PNxv/Vz8n/1tHL/9jT
        zf/Y087/lpKP/xsbGv8AAADnAAAAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAXAAAApQAAAP0lIyL/dHBr/7Ospf/LxLz/zca+/87IwP/QysL/0svF/9PN
        xv+9uLL/fHl2/ygnJv8AAAD9AAAApQAAABcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAKAAAADxAAAA/xcWFf81MzH/Q0E//0RC
        P/82NTP/GBcW/wAAAP8AAADxAAAAoAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAABDAAAAdwAA
        AJoAAACpAAAAqQAAAJoAAAB3AAAAQwAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////gB///gAH//gAAf/wAAD/4AAAf8AAAD/AAAA/gAAAH4AAAB8AA
        AAPAAAADwAAAA4AAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAHAAAADwAAAA8AAAAPgAAAH4AAAB/AA
        AA/4AAAf/AAAP/4AAH//gAH//+AH//////8=
</value>
  </data>
</root>